drop table if exists users cascade;
drop table if exists compilations cascade;
drop table if exists categories cascade;
drop table if exists location cascade;
drop table if exists events cascade;
drop table if exists compilation_events cascade;
drop table if exists requests cascade;

create table if not exists users
(
    id    bigint generated by default as identity not null,
    email varchar(255) not null,
    name  varchar(255) not null,
    constraint pk_user primary key (id),
    constraint uq_user_email unique (email)
);

create table if not exists compilations
(
    id     bigint generated by default as identity not null,
    pinned boolean default false,
    title  varchar(255) not null,
    constraint pk_compilation primary key (id),
    constraint uq_compilations_title unique (title)
);

create table if not exists categories
(
    id   bigint generated by default as identity not null,
    name varchar(255) not null,
    constraint pk_category primary key (id),
    constraint uq_category_name unique (name)
);

create table if not exists location
(
    id  bigint generated by default as identity not null,
    lat float not null,
    lon float not null,
    constraint pk_location primary key (id)
);

create table if not exists events
(
    id                 bigint generated by default as identity not null,
    annotation         varchar(2000)               not null,
    category_id        bigint                      not null references categories (id),
    created_on         timestamp without time zone not null,
    description        varchar(5000),
    event_date         timestamp without time zone not null,
    initiator_id       bigint                      not null references users (id),
    location_id        bigint                      not null references location (id),
    paid               boolean     default false,
    participant_limit  int         default 0,
    published_on       timestamp without time zone not null,
    request_moderation boolean     default true,
    event_state        varchar(20) default 'pending',
    title              varchar(500)                not null,
    constraint pk_event primary key (id)
);

create table if not exists compilation_events
(
    compilation_id bigint not null references compilations (id),
    event_id       bigint not null references events (id),
    constraint pk_compilation_events
    primary key (compilation_id, event_id)
);

create table if not exists requests
(
    id           bigint generated by default as identity primary key,
    created      timestamp without time zone not null,
    event_id     bigint                      not null,
    requester_id bigint                      not null,
    status       varchar(20)                 not null,
    constraint fk_user_req foreign key (requester_id) references users (id) on delete cascade,
    constraint fk_event_req foreign key (event_id) references events (id) on delete cascade
)
