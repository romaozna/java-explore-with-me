create table if not exists categories
(
    id   bigint generated by default as identity,
    name varchar(255) not null,
    constraint pk_categories primary key (id),
    constraint unique_name unique (name)
);

create table if not exists users
(
    id    bigint generated by default as identity,
    name  varchar(255) not null,
    email varchar(255) not null,
    constraint pk_users primary key (id),
    constraint unique_email unique (email)
);

create table if not exists locations
(
    id  bigint generated by default as identity,
    lat float not null default 0.0,
    lon float not null default 0.0,
    constraint pk_locations primary key (id)
);

create table if not exists events
(
    id                 bigint generated by default as identity,
    annotation         varchar(2000)               not null,
    category_id        bigint                      not null,
    confirmed_requests int     default 0,
    created_on         timestamp without time zone not null,
    description        varchar(7000)               not null,
    event_date         timestamp without time zone not null,
    initiator_id       bigint                      not null,
    location_id        bigint                      not null,
    paid               boolean default false,
    participant_limit  int     default 0,
    published_on       timestamp without time zone,
    request_moderation boolean default false,
    state              int                         not null,
    title              varchar(120)                not null,
    constraint pk_events primary key (id),
    foreign key (category_id) references categories (id) on delete cascade,
    foreign key (initiator_id) references users (id) on delete cascade,
    foreign key (location_id) references locations (id) on delete cascade
);

create table if not exists compilations
(
    id     bigint generated by default as identity,
    pinned bool default false,
    title  varchar(100) not null,
    constraint pk_compilations primary key (id)
);

create table if not exists compilation_events
(
    compilation_id bigint,
    event_id       bigint,
    primary key (compilation_id, event_id),
    foreign key (event_id) references events (id) on delete cascade,
    foreign key (compilation_id) references compilations (id) on delete cascade
);

create table if not exists requests
(
    id           bigint generated by default as identity,
    event_id     bigint,
    requester_id bigint,
    created      timestamp without time zone not null,
    status       int                         not null,
    foreign key (event_id) references events (id) on delete cascade,
    foreign key (requester_id) references users (id) on delete cascade,
    constraint unique_request unique (event_id, requester_id)
);
